	subroutine bdisnew4he3(eic1,ep1,theta1,aa1,zz1,ann1,esep1,pmax1,
     >	innt1,innp1,f01,bigB1,ag1,bg1,alpha1,sigdeep)
        implicit real*8 (a-z)
	real*8 wp,ww1,ww2
	real*8 eic1,ep1,theta1,aa1,zz1,ann1,esep1,pmax1,
     >	innt1,innp1,ag1,bg1,cg1,dg1,sigdeep
!	modified version of BWF's routine bdis
!	ag,bg,cg,dg are coeff of a 2 gaussian fit to the f(y)
!	which was converted to n(k)
	real*8 rk,rho
	real*8 rq2		!to pass to w1w2
!	common/interp/npts,nterms,rk(200),rho(200)
	
!	eic = real(eic1)
!	ep = real(ep1)
!	theta = real(theta1)
!	aa = real(aa1)
!	zz = real(zz1)
!	ann = real(ann1)
!	esep = real(esep1)
!	pmax = real(pmax1)
!	innt = real(innt1)
!	innp = real(innp1)
!	ag = real(ag1)
!	bg = real(bg1)
!	f0 = real (f01)
!	BigB = real (bigB1)
!	alpha=real(alpha1)


!	eic incident energy in gev
!	ep final energy
!	thec scattering angle in radians
!	aa atomic number
!	zz number of protons
!	ann number of neutrons
!	esep spearation energy
!	pmax max p in integration of p > kf
!	innt integration steps over theta
!	integration steps over p
!       
!       
	write(6,*)'E,EP,THETA, A, ZZ,ANN,ESP,PMAX,INNT,INNp,ag,bg,bigB, f0, alpha'
	write(6,*)eic,ep,theta,aa,zz,ann,esep,pmax,
     >	innt,innp,ag,bg,bigB, f0, alpha
	pi = 3.14159265
	s2 = sin(theta/2.)**2
	anu = eic - ep
	q2 = 4.*eic*ep*s2
	
!	write (6,*) 'in bdis, got q2 of ', q2
	rq2=q2		! to pass to w1w2
!	write(6,*)eic,ep,thec,aa,zz,ann,esep,q2

!
	amp = 0.938256
	x = q2/2./amp/(eic-ep)
	amp2 = amp*amp
	amn = 0.93957 
	if(aa .gt. 2 .and. aa .lt. 4)then	!he3
	ama_1 = 1.87609
	elseif (aa.eq.4) then
	ama_1 = 2.8094
	elseif (aa.eq.12) then
	ama_1 = 10.25553
	elseif (aa.eq.27) then
	ama_1 = 24.205
	elseif (aa.eq.56) then
	ama_1 = 51.1743
	elseif (aa.eq.197) then
	ama_1 = 182.5394
	endif
	ama = ama_1 + amp - esep
!	write (6,*) 'ama_1 is ', ama_1
!
	q3 = sqrt(q2 +anu*anu)
	w1ap = 0.0
	w2ap = 0.0
	w1an = 0.0
	w2an = 0.0
	du = 2./innt
	akf = (1. - exp(-aa/8.))*.22 + 0.04
!
	dp = pmax/innp
!
!	calculate proton and neutron free structure functions as a check if
!	desired
!	inp = 1
!	w0 = sqrt(amp2 + 2.*amp*amu - q2)
!	call w1w2(q2,w0,w1,w2,inp)
!	w2p = w2
!	inp = 2
!	call w1w2(q2,w0,w1,w2,inp)
!	w2n = w2
	wp_max = 0.0
!	do smearing correction
	do ip = 1,innp
	  p = (ip - .5)*dp
	  w1ap1 = 0.0
	  w2ap1 = 0.0
	  w1an1 = 0.0
	  w2an1 = 0.0
	  
	  do 10 iu = 1,innt
	    u = (iu - .5)*du
	    u = u - 1.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!	i removed this dependence on kf 12/4/87 just to see the
!	effect
!       if(p.le.akf)then
!       
	    ei = ama - sqrt(p*p+ama_1*ama_1)
!       
!       else
!       ei = amd - sqrt(p*p + amp**2)
!       endif
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	    anup = (ei*anu - p*u*q3)/amp
!	note that w1 and w2 are zero if wp < M + mpi
!	
	    wpmin2 = (amp + .135)**2
	    if (iu.eq.1) then
!       write (6,*)'This is ', this
!       write (6,*) 'wpmin2', wpmin2
!       write (6,*) 'Ei is,',ei
	    endif
	    if((ei*ei - p*p + 2.*ei*anu - 2.*p*u*q3 - q2).le
	1     .wpmin2)goto 10
	    radical =(ei*ei - p*p + 2.*ei*anu - 2.*p*u*q3 - q2)
	    wp = sqrt(radical)
				!write (6,*) 'wp (nu) is ',wp
				!write (6,*) 'real nu is ', anu
	    inp = 1
				!write(6,*)'In if stmt, about to go to w1w2'
	    call w1w2(rq2,wp,w1,w2,inp)
				!write(6,*)q2,wp,w1,w2,inp
	    if (wp .gt. wp_max) wp_max = wp
!       write(6,*) wp
	    arg1 = w1 + (1 -u*u)*p*p*w2/2./amp2
	    arg21 = (1. + p*u*q2/amp/anup/q3)**2*anup*anup/anu/anu
!       errorinBR	arg21 = (1. - p*u*q2/amp/anup/q3)*anup*anup/anu/anu
	    arg22 = (1.- u*u)*p*p*q2/2./amp2/q3/q3
	    arg2 = w2*(arg21 + arg22)
	    w1ap1 = w1ap1 + arg1*du
	    w2ap1 = w2ap1 + arg2*du
	    inp = 2
	    call w1w2(rq2,wp,w1,w2,inp)
	    arg1 = w1 + (1 -u*u)*p*p*w2/2./amp2
!       errorinBR	arg21 = (1. - p*u*q2/amp/anup/q3)*anup*anup/anu/anu
	    arg21 = (1. + p*u*q2/amp/anup/q3)**2*anup*anup/anu/anu
	    arg22 = (1.- u*u)*p*p*q2/2./amp2/q3/q3
	    arg2 = w2*(arg21 + arg22)
	    w1an1 = w1an1 + arg1*du
	    w2an1 = w2an1 + arg2*du
!       
 10	  continue
!       write (6,*) 'skipped the w1w2 stuff'
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!       the code in between these !! is the original weighting in the
!       BR paper ie a fermi distribution plus a high momentum tail
!       if (p .le. akf)then
!       weight1 = (1.-6.*(akf*2./pi)**2)*p*p*dp
!       w1ap = w1ap + w1ap1*weight1
!       w2ap = w2ap + w2ap1*weight1
!       w1an = w1an + w1an1*weight1
!       w2an = w2an + w2an1*weight1
!       else
!       fbot = p*p*(1. -akf/pmax)
!       weight2 = 2.*((akf*2./pi)**2)*dp*akf**4/fbot
!       w1ap = w1ap + w1ap1*weight2
!       w2ap = w2ap + w2ap1*weight2
!       w1an = w1an + w1an1*weight2
!       w2an = w2an + w2an1*weight2
!       endif
!	normalization factor
!       fackf = 1.5/akf/akf/akf
!       this factor is 1.5 instead of 3 because integration is done
!       from d(cos(theta)) from -1 to 1 and 4pi occurs because of
!       2pi (from phi) and 2 from theta
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!       if(aa .gt. 2 .and. aa .lt. 4)then	!he3
!	make special case for he3 using momentum distribution
!	from spectral function 
!	units  are different,so take care
!       xin = p*1000.
!       call he3dist(rk,rho,npts,nterms,xin,yout)
!       weight1 = yout*1.e9*p*p*dp	
!       else					! all others
		
!       weight1 = (ag*bg/pi*exp(-bg*p**2) +
!       >		 cg*dg/pi*exp(-dg*p**2) )*p*p*dp
		
	  weight1 = ((exp(-ag*p**2)*(f0-bigB)/alpha**2)*((1+ag*(ag
	1   **2+p**2))/(ag**2+p**2)))*p*p*dp//pi
	  if(p.lt.0) then
	    weight1=weight1-bg*bigB*exp(-bg*p)
	  else
	    weight1=weight1+bg*bigB*exp(-bg*p)
	    
	  endif
	  
	  if (weight1.lt.0) write(*,*) 'uhoh', p, weight1, ag, bg,
	1   bigB, g0, alpha
	  
	  w1ap = w1ap + w1ap1*weight1
	  w2ap = w2ap + w2ap1*weight1
	  w1an = w1an + w1an1*weight1
	  w2an = w2an + w2an1*weight1
	enddo
	
	fackf = 2.*pi
!	
	w1a = fackf*(zz*w1ap + ann*w1an)
	w2a = fackf*(zz*w2ap + ann*w2an)
!       
!	write(6,*) fackf,zz,ann,w1ap,w1an,w2ap,w2an
	sigm = cos(theta/2.)/(2.*137.*eic*s2)
	sigm = (0.1973*sigm)**2
	tt2 = tan(theta/2.)**2
	sigdeep = 1.e7*sigm*(w2a + 2.*w1a*tt2)
				!write(6,*)'End of Bdis, DIS, MOTT',sigdeep
	write(50,*)x,q2,wp_max
	return
	end
	
